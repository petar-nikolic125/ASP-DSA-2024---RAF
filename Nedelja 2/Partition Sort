#include <iostream>


typedef struct Element {
    int data;
    Element* next;
} Element;

Element* addElement(int data) {
    Element* newElement = new Element;
    newElement -> data = data;
    newElement -> next = nullptr;
    return newElement;
}
Element* addOnEnd(Element* list, Element* newElement) {
    if(list == nullptr) {
        return newElement;
    }
    Element* temp = list;
    while(temp -> next != nullptr) {
        temp = temp -> next;
    }
    temp -> next = newElement;
    return list;
}


Element* reverse(Element* head) {
    Element* prev = nullptr;
    Element* current = head;
    while(current != nullptr) {
        Element* next = current -> next;
        current -> next = prev;
        prev = current;
        current = next;
        }
    return prev;
    }


int listCount(Element* head) {
    int count = 0;
    while(head != nullptr) {
        count += 1;
        head = head -> next;
    }
    return count;
}

void writeList(Element* list) {
    while(list != nullptr) {
        std::cout << list -> data << " -> ";
        list = list -> next;
    }
    std::cout << "null" << "\n";
}

void deletelist(Element* list) {
    while (list != nullptr) {
        Element *next = list->next;
        delete(list);
        list = next;
    }
    std::cout << "list deleted\n";
}

Element* partitionList(Element* list, int x) {
    Element* lowDummy = new Element;
    Element* highDummy = new Element;

    Element* low = lowDummy;
    Element* high = highDummy;

    while(list) {
        if(list -> data < x) {
            low -> next = list;
            low = low -> next;
        }
        else {
            high -> next = list;
             high = high -> next;
        }
        list = list -> next;
    }
    high -> next = nullptr;
    low -> next = highDummy -> next;

    Element* result = lowDummy -> next;
    delete(lowDummy); delete(highDummy);
    return result;
}

using namespace std;

// made changessss
int main() {
    Element* list1 = nullptr;
    int data;
    cout << "Upisi nulu za kraj unosa!\n";
    while(true) {
        cout << "insert node: \n";
        cin >> data;
        if(data == 0) {
            break;
        }
        list1 = addOnEnd(list1, addElement(data));
    }
    list1 = partitionList(list1, 3);
    writeList(list1);
    deletelist(list1);
    return 0;
}
