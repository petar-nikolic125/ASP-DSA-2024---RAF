#include <iostream>


typedef struct Element {
    int data;
    Element* next;
} Element;

Element* addElement(int data) {
    Element* newElement = new Element;
    newElement -> data = data;
    newElement -> next = nullptr;
    return newElement;
}
Element* addOnEnd(Element* list, Element* newElement) {
    if(list == nullptr) {
        return newElement;
    }
    Element* temp = list;
    while(temp -> next != nullptr) {
        temp = temp -> next;
    }
    temp -> next = newElement;
    return list;
}

Element* reverse(Element* head) {
    Element* prev = nullptr;
    Element* current = head;
    while(current != nullptr) {
        Element* next = current -> next;
        current -> next = prev;
        prev = current;
        current = next;
        }
    return prev;
    }


int listCount(Element* head) {
    int count = 0;
    while(head != nullptr) {
        count += 1;
        head = head -> next;
    }
    return count;
}

void writeList(Element* list) {
    while(list != nullptr) {
        std::cout << list -> data << " -> ";
        list = list -> next;
    }
    std::cout << "null" << "\n";
}

void deletelist(Element* list) {
    while (list != nullptr) {
        Element *next = list->next;
        delete(list);
        list = next;
    }
    std::cout << "list deleted\n";
}

bool isPalindrome(Element* head) {
        if(head == nullptr) {
            return head;
        }
    Element* slowPtr = head;
    Element* fastPtr = head;
    Element* prevSlow = nullptr;
    while(fastPtr != nullptr && fastPtr -> next != nullptr) {
            prevSlow = slowPtr;
            slowPtr = slowPtr -> next;
            fastPtr = fastPtr -> next -> next;
    }
         prevSlow -> next = nullptr;
         Element* firstList = head;
         Element* secondList = slowPtr;
        secondList = reverse(secondList);
            writeList(firstList);
            writeList(secondList);
    bool isPalin = true;
    while(firstList != nullptr) {
        if(secondList -> data != firstList -> data) {
            isPalin = false;
            return isPalin;
        }
        else {
            firstList = firstList -> next;
            secondList = secondList -> next;
        }
    }
    deletelist(firstList);
    deletelist(secondList);
    return isPalin;
}





using namespace std;

// made changessss
int main() {
    Element* list = nullptr;
    int data;
    while(true) {
        cout << "insert node: \n";
        cin >> data;
        if(data == 0) {
            break;
        }
        list = addOnEnd(list, addElement(data));
    }
    writeList(list);
    bool test = isPalindrome(list);
    if(test) {
        cout << "palindrom je!";
    }
    else cout << "nije palindrom";
    writeList(list);
    deletelist(list);
    return 0;
}
